#+BEGIN_EXPORT html
---
layout: default
title: Killer Queen Streaming Guide
date: 2017-11-05
categories: killer-queen
---
#+END_EXPORT

#+TITLE:   Killer Queen Streaming Guide
#+AUTHOR:  Logan Barnett
#+EMAIL:   logustus@gmail.com
#+DATE:    <2017-11-05 Sun> 
#+TAGS:    killer-queen

#+TOC: headlines 3

* introduction
As part of trying to reduce the Portland scene's [[https://en.wikipedia.org/wiki/Bus_factor][bus number]] in regards to our
streaming setup I've recorded notes here as best I can. The dream is to have a
pretty foolproof setup that anyone mildly technically competent could apply to
their scene's cab. People can and should provide suggestions and corrections so
our community can better thrive. As a general policy I won't use a comment
system on this site because static hosting is awesome and also because
[[https://github.com/tessalt/echo-chamber-js][echo-chamber.js]] makes an excellent point. Feel free to contact me via email,
Twitter, or carrier pigeon for any improvements we can make here.

* improvements :noexport:
- [ ] Vectorize some of the graphics on the challonge imported view.
- [ ] Need network access somehow - wifi is currently not known but could be
  acquired via Javan Ivey or Dylan Higgins.
- [ ] Improve styling of the org exports (thus this page as well). Make them
  look more like as they are when edited in Emacs.
- [ ] Find out what changes Javan might have made to his clone of Matt's repo.
- [ ] Configure PlantUML diagrams to emit colors that are closer to the current
  Emacs theme.
- [ ] Include images for reference. I took many pictures.
- [ ] Specify when we're being generic vs specific in terms of hardware used vs.
  what's possible for use.

* challonge integration
Need access to Matt Wire's github repo that has a Rails server.
- [[https://github.com/boxofmattwire/kq-tournament][Matt Wire's repo]]
- [[https://github.com/LoganBarnett/kq-tournament][Logan's fork]]

Currently this repo isn't public.

** workarounds
Changes to the Challonge setup screws up the integration with the Rails server.
The Rails server at that point can't be used (or maybe the data would need to be
wiped). At that point, the server is basically useless to us (and we shouldn't
try troubleshooting the server during a streaming run if possible). Instead
there are text files which override the blue score, blue name, gold score, and
gold name. These appear to be sources in OBS. I haven't verified this yet.

* video flow
There is a 4 port splitter in cab. Two go to the two monitors. The overhead
monitor takes another slot, and the projector takes the final.

This is how our specific setup looks at PDX. Our stream box is the computer
running [[http://openbroadcaster.com][OBS]].

#+BEGIN_SRC plantuml :file video-flow.svg :java -Djava.awt.headless=true
skinparam monochrome reverse

[cab]
() splitter
[stream-box]
() "blue webcam" as bcam
() "gold webcam" as gcam
() "extra monitor" as auxout
() "blue monitor" as bmonitor
() "gold monitor" as gmonitor

[cab] --> splitter
bcam --> [stream-box]
splitter --> [stream-box]
splitter --> auxout
splitter --> gmonitor
splitter --> bmonitor
gcam --> [stream-box]

#+END_SRC

#+RESULTS:
[[file:video-flow.svg]]

* audio flow

Audio runs a weird loop. The mics wire into a mixer that runs to _another_
mixer. It's necessary for the headphones to get both the output of the computer
and the [[https://en.wikipedia.org/wiki/Sidetone][sidetone]] of the mics themselves. Sidetone is useful so speakers get a
sense that the system is picking up their voice, and also gives them a sense of
how loud they are being picked up.

#+BEGIN_SRC plantuml :file audio-loop.svg :java -Djava.awt.headless=true
skinparam monochrome reverse

interface "left mic" as lmic
interface "right mic" as rmic
interface "left headset" as lhead
interface "right headset" as rhead
interface "computer" as cpu

[thunderbolt-mixer]
[4-to-1-mixer]
[amp]

lmic --> [thunderbolt-mixer]
rmic --> [thunderbolt-mixer]

[thunderbolt-mixer] -> [4-to-1-mixer] : audio
[thunderbolt-mixer] --> cpu : thunderbolt
cpu --> [4-to-1-mixer] : headphone to input
[4-to-1-mixer] -> [amp] : output to input
[amp] --> lhead
[amp] --> rhead

#+END_SRC

#+RESULTS:
[[file:audio-loop.svg]]

This setup also provides lots of knobs to turn in terms of making sure the
announcers can turn up their own voices and also turn up the input of what they
are hearing from the game. This is done individually per the mixer and amp knobs
available per input/output (mixer and amp, respectively). _Turn the computer's
audio up to 100% and announcers can turn down as needed._

* pdx setup

This portion is specifically for the Portland setup at Ground Kontrol.

** video
HDMI is provided as an input source via a computer's Thunderbolt port (I need to
check, but I'm pretty sure it's not mini display port). This runs from the video
splitter to the laptop.

#+ATTR_ORG: :width 400
[[./assets/hdmi-to-thunderbolt-input-01.jpg]]

When the device is working, you'll see a white light near the Thunderbolt
connection. 

#+ATTR_ORG: :width 400
[[file:assets/hdmi-to-thunderbolt-input-activated-01.jpg]]

** audio

Here's the amp as labeled in the diagram above:

#+ATTR_ORG: :width 400
[[./assets/audio-4-channel-amp-01.jpg]]

We could use an image that's in focus...

The 4 channel mixer:

#+ATTR_ORG: :width 400
[[./assets/audio-4-channel-mixer-01.jpg]]

These devices appear to be very similar, but they are very different. Basically
the mixer combines a series of inputs into a single output, and the amp splits a
single input into a series of outputs.

The mic mixer:

#+ATTR_ORG: :width 400
[[./assets/audio-mic-mixer-01.jpg]]

The mics connect directly to this.

** all together now

#+ATTR_ORG: :width 400
[[./assets/pdx-working-setup-01.jpg]]

#+ATTR_ORG: :width 400
[[./assets/pdx-working-setup-02.jpg]]

** anti trip trick

Ground Kontrol has seats that have these glowing strips on their corners and
sides.

#+ATTR_ORG: :width 400
[[./assets/anti-cable-snag-trick-01.jpg]]

These strips slide up a little bit. There's a small channel between the strip
and the side of the seats. You can stuff some of the cables you need to run
(such as the cables for the webcams) into this channel. Here we've stuffed the
cables in there as best we can with the strip still up.

#+ATTR_ORG: :width 400
[[./assets/anti-cable-snag-trick-03.jpg]]

Once the cables are in place, we can slide the strip back down, and it will hold
the cables in place well enough to prevent feet from kicking the cables out or
other snares from occurring. Here's the closed version with cables inserted:

#+ATTR_ORG: :width 400
[[./assets/anti-cable-snag-trick-04.jpg]]

* troubleshooting
** If the input is not recognized on the computer's end
The known recipe (not fool proof, but most of the work):
1. Reboot the cabs with the computer's input (HDMI capture box).
2. Reintroduce other slots (monitors x2 and the projector).
* exporting notes :noexport:

I export this with the following:

#+BEGIN_SRC emacs-lisp
(org-to-jekyll)
#+END_SRC
